Distro: Void Linux x64/glibc 
Kernel: 6.1.20_1
DE: X11/GNOME 43.3
Resolution: 3840 x 2160
Scaling: 200%
Refresh rate: 29.97 Hz
CPU: Intel Core i3 10100F x 8
GPU: NVIDIA GeForce GT 730 (kepler)
IDE: IntelliJ IDEA 2022.3.3 (Community Edition)
openjdk 20 2023-03-21
JavaFX 20
===========================================================
Instead of experimenting on nothing in 'JavaFX-CustomWindow-Button-Transition' repo decided to rewrite my WPF RentManager in JavaFX and see how it is. I think it's ok now except for NotificationView, which notifies only on plot add and plot edit by others (other instance of the Application will also work, userId has to be different), you can add more in AppData.java by looking at the WPF/C# version of Rentmanager. Major issue is JavaFX filtering System and because of that SelectionBox will cause some issue. I'll use it to see whether there's any other thing to solve. AND later I'll remove some of the points noted below that's already been fixed. Removed?Merged some points.
----------------------------------------------------------

build the artifacts (jar)
Create a RentManager folder in home, put that jar and the icon.png from resource folder in that and add a script there like this:
	
#!/bin/bash
FX=/mnt/HDD/openjfx19/sdk/lib

java \
-Xms1G \
-Xmx4G \
--module-path $FX \
--add-modules javafx.controls \
-jar /home/emon/RentManager/RentManager.jar

create a rentmanager.desktop file like this:

[Desktop Entry]
Type=Application
Encoding=UTF-8
Name=Rent Manager
Icon=/home/emon/RentManager/icon.png
Exec=/home/emon/RentManager/RentManager.sh
Terminal=true
Categories=Utility

and place it in /usr/share/applications to make it appear in application menu.

	
if you don't want to see terminal, set Terminal=false. Hopefully, it will work with following issues.
===========================================================

1) each module has a ridiculous folder/package, I wanted to keep those files (in ridiculous package) in the root directory and reference those in other files in the same or other module. You can't do that!

2) In RentManager/ridiculous/Appdata you'll see 7 ObservableList:

    public static ObservableList<Plot> plots;
    public static ObservableList<Space> spaces;
    public static ObservableList<Tenant> tenants;
    public static ObservableList<Lease> leases;
    public static ObservableList<ControlHead> controlHeads;
    public static ObservableList<Head> heads;
    public static ObservableList<Notification> notifications;
    
and these are filled in InitialLoadTask of AppData. These are the base lists one is supposed to manipulate (edit, update) and the updates should be seen all over the application. In Rentmanager/ViewModels you see useage of these lists. Problem is you don't see update when you manipulate these lists unless you wrap these in another FXCollections.synchronizedObservableList and you can't give synchronizedObservableList an extractor. Tried FXCollections.ObservableList and that also doesn't work. So you can't work with one underlying collection like you do in WPF.

If you go to RentManager/ViewModels/Edit/EditLeaseVM you'll see a Jar thing:

	var source = new Jar<>(AppData.leases, o -> new Observable[]{
		o.isExpiredProperty(),
		stateProperty,
		queryProperty,
		selectedPlotIdProperty
	});

in the constructor. o.isExpiredProperty() is a property of the items contained in the list and the rest are properties of viewmodel. Different viewmodels may have different extractor on the same underlying list and you can't construct such thing afterwards with any of FXCollections...List hence the inefficient Jar which listens to the underlying list's wasAdded/wasRemoved change and adds and/or removes.

3) in RentManager/ViewModels/Edit/EditLeaseVM you see 'public FilteredList<Space> editSpace' and it relies on another Jar thing's extractor for filter. When you launch the application and go to Edit -> Lease, you see on the left side Asia in SelectionBox and Afghanistan, Indonesia and Iraq in a list below. When you select Afghanistan, you see right side is populated with some information. At the bottom right you see a pencil/edit button and if you click that, you see Asia, Afghanistan in SelectionBoxes on the right side. When you select, for example, Europe on the Plot SelectionBox on the right, you see Afghanistan in the following SelectionBox becomes England with another problem.

These kind of filter with extractor in JavaFX invokes ListChangeListener.Change for every item removed and/or added and since my SelectionBox relies on these changes, it's highly inefficient. For these kind of Filter, I get a single Reset event in WPF and do whatever I want to do. In javaFX, the thing I do on change is done, many times, for every item added/removed when this type of filter is applied.

On bottom right of HomeView, you see "Due & Payments" and there's a CheckBox (BiState) to filter exisiting or left tenants. When you click that, filter is applied and 'onTenantChanged' method of TenantDetailVM is called multiple times and as a result it jams the Server with multiple requests. When you apply fiter to a list, you don't call add/remove on the list, you just reset the list.

4) in RentManager/ViewModels/Edit/EditLeaseVM you see these 3:

	public void cloneSelected()
	private void onIsOnEditChanged(ObservableValue<?> o, boolean ov, boolean nv)
	private void onEditedPlotIdChanged(ObservableValue<?> o, Number ov, Number nv)

methods.In 'cloneSelected' I've:

	edited.plotIdProperty().addListener(this::onEditedPlotIdChanged);

and in 'onEditedPlotIdChanged', I reset a property 'editedPlotIdProperty.set(...)' and that editedPlotIdProperty is an observable in a Jar:

        var editSpaceSource = new Jar<>(AppData.spaces, o -> new Observable[]{
                selectedPlotIdProperty,
                editedPlotIdProperty
        });
        editSpace = new FilteredList<>(editSpaceSource, x -> isOnEditProperty.get() ?
                x.getPlotId() == editedPlotIdProperty.get() :
                x.getPlotId() == selectedPlotIdProperty.get()
        );

in the constructor. So when I set editedPlotIdProperty in onEditedPlotIdChanged method, it should apply the filter given in the editSpace FilteredList but it doesn't. Remove the
	
	System.out.println("EditLeaseVM: editedPlotId " + editedPlotIdProperty.get());

from 'onEditedPlotIdChanged' method, Launch the App, Select Afghanistan in Edit -> Lease view, click on edit button, change Asia to Africa in Plot SelectionBox on the Right, you see Egypt in place of Afghanistan. Click the cancel button on bottom right, where edit was and you see it becomes Afghanistan again. Click once again the edit button, change Asia to Europe/Africa and you see Afghanistan doesn't change anymore. So the important thing is:

	System.out.println("EditLeaseVM: editedPlotId " + editedPlotIdProperty.get());

or the get call. When you call get before set it works as expected. Haven't been able to figure out why do I need that get call before set!

5) [Read last para] On bottom left of HomeView (Rent, Deposit & Dues), click the Asia Slice, you see two charts on top right are drawn. When you hover over chart elements on Charge & Collections view, you see popup appears. Keep moving the mouse see popup starts flickering. In addition to that flickering issue, Due & Tenants view has one more problem. It can't even show the popup when you hover over the righmost chart element. That's because I've hide call on popup when mouse exits the chart element and when mouse is over popup chart element receives mouse exited event! I've similar draggable popup in WPF on those views and I've no issue there.

Charge & Collections view uses PinStack (Controls/controls/pinchart/PinStack.java) and Due & Tenants view uses PinColumn (Controls/controls/pinchart/PinColumn.java). In both of those you see 'private void onMouseEntered(MouseEvent e)' method which sets the x position of popup and calls show. If you click the "Existing" checkbox (BiState) in Due & Tenants view, you see another chart is drawn there and it's same popup issue and it uses (Controls/controls/columnstackchart/DoubleBar.java).

Changed x,y to avoid some issue BUT it's unavoidable when there's not enough room to display the popup and it's to appear below the mouse. Capture the mouse and kill it. How do you capture?

6) In Controls module, you see two packages, skins and skinned. Things in those are necessary mostly because of your useless and worthless css. For every control, you either need to write some css for that control or subclass and do some worthless things I've done in those packages.

In WPF you don't do these worthless things! For changing background and foreground you just write one thing! Here's an example:

        Control.StyleProperty.OverrideMetadata(typeof(Control), new FrameworkPropertyMetadata() {
            DefaultValue = new Style() {
                Setters = {
                    new Setter(Control.BackgroundProperty, Constants.Background),
                    new Setter(Control.ForegroundProperty, Brushes.LightGray)
                }
            }
        });

every subclass of Control will take this style. Same for Scrollbars, just one thing like that and everywhere scrollbars take the style.

7) In Detail Rent, Depost & Dues of HomeView, sometimes you don't see left part of white stroke when the revealing animation is in action. Looks like it starts drawing from the middle.

8) In AddView, SVGs are all over but few of them looks ok. Compare these with that of WPF to see how beautifully WPF draws those same icons in AddView.

9) You can't provide custom Paper to Printer. In Reports -> Balances, Reports -> RP & LJ, and Reports -> Plot/Space/Tenant views there're options for printing. 'public void setPaper(Paper paper)' of Services/ridiculous/Press sets the Paper selected in Controls/dialogs/PrinterSelectionDialog. Wanted to give it a Custom Paper (8.5" x 11.7") with 0.5" Margin but you can't instantiate Paper! Looks like once upon a time people could provide custom paper but you broke that by making that API private.

I've been doing these coding experiments since .net core 1 and all that I've written so far compiles and runs in .net 7. There's not that much breaking change in .net. I'd to put an if guard in my line chart loaded animation probably in .net 3/4/5 and that's the only breaking change so far.

10) Sometimes you see some movement in Cells in ListView/TreeView when mouse enters for the first time.

11) ByteOrder is another problem, I've to write ByteOrder.LITTLE_ENDIAN all over! Before stepping into Linux, I thought Microssoft is the weird guy, flipped everything. My WPF/C# clients works fine with Windows C as well as Linux C without any change so it's Java the weird guy flipped everything for no reason. Is Java socket slower than C# socket? Your socket doesn't provide all the functionalities that C# provides. For example, I cn't write a packet sniffer with Java socket. With C# socket I can and I've written a basic one I stare at sometimes.

12) Started to get into new clueless issue! Today, 09 January 2023, when I hit the debug button, it stopped in class PropertyHelper, line return "true".equals(propVal.toLowerCase()); To get out of that added -Djavafx.sg.warn="true" in vm argument. With that, when I hit Run (not debug) button and go to AddView, I see:

	WARNING added to a new parent without first removing it from its current
    		parent. It will be automatically removed from its current parent.
    		
and it points to these:

	at abstracts.SelectionControlBase.setSelectedContent(SelectionControlBase.java:109)
	at controls.SelectionBox.initializeUI(SelectionBox.java:77)
	at controls.SelectionBox.<init>(SelectionBox.java:72)
	at Views.Add.AddSpace.getUI(AddSpace.java:33)
	at Views.Add.AddBase.onFirstSight(AddBase.java:27)
	at controls.MainPanel.setView(MainPanel.java:222)

when I set breakpoints at topmost call, hit debug and keep clicking continue, it passes without any warning/issue! If I don't debug and run without that vm args, everything works as expected! Later, in the beginning of Controls/ClientApp I've added:

	static { System.setProperty("javafx.sg.warn", "false"); }

That's a horrible thing. 

13) When you type in filter TextBox or SelectionBox, you see matching Text become blue and bold, I've similar HiText in WPF but I don't change foreground, I set its background. Here in your TextFlow, you can't set background of Text.

14) Popup doesn't block mouse click event. Go to Add -> Lease view, click the from DayPicker, popup appears. In between left/right arrows and Month, year text, there's empty space. Click the empty space, see TextArea below the Popup receives the event! Go to Reports -> Plot/Space/Tenant Ledger, make popup appear by clicking the from DayPicker and click the empty space, see TextBox below receives the event. Modified some code so you don't see the movement of hint BUT you see cursor changes. [It's GNOME Desktop issue, on Widows 10 clicking on Popuup doesn't leak]

You hit enter in a TextBox and ListView in a popup receives that event instead of TextBox. You click on a popup other controls below receives that event. WPF hasn't yet been able to break the popup wall and tunnel this kind of event but they do capture the mouse and kill it on popup so it doesn't flicker on my HomeView charts.

15) All 5 views of AddView have TextArea. When you hit tab on those textarea, it accepts it. In most cases, next focusable element should be focused. Looks like your Focus API is private and one can't change the behavior!  

16) Another unexpected behavor which you, probably, can't reproduce but experience sometimes. For example, when you click SelectionBox, popup should appear on first click BUT I've seen it failing on first click.

17) [Modified some code so you can't do these now BUT the problem exists] You can't handle focus properly. Go to Transactions and in Regular View, remove Mr. A from top (Tenant) SelectionBox by clicking the close button. Type g in the box and the popup will, kind of, disappear. Keep Tenant SelectionBox in that state and click on Receivable (Control) SelectionBox, another popup will appear. Leave it open and move mouse to Tenant SelectionBox and backspace to remove g and type a. In Tenant SelectionBox's popup there'll be Mr. A only. Now, hit down arrow, see where's your focus and who handles the event!

You've TextField of Tenant SelectionBox and ListView of Control SelectionBox's popup focused at the same time. Up/Down is being handled by the ListView of Control SelectionBox while cursor is blinking in the TextField of Tenant SelectionBox. Type b in this state and see it appears in the TextField of Tenant SelectionBox.

18) You may realise, at some point, you've to revamp your framework "to rule them all". When you do, don't forget to get rid of your worthless CSS, root cause of many problem for sure. The more I'm getting into it, the more I'm realizing that it's the "invincible" Java:FX, you can't fix it! 12 years have gone by and text wrapping issue in TreeCell is still tbd in your bug-tracker. You create and live with problem instead of solving a problem!

19) In linux Y position of TreeCell disclosure node looks ok. With the same setup in WrapTreeCellBase, Y position is wrong in Windows 10!

20) In Linux, when you move mouse to the edges cursor changes and when you move it back to central part of window quickly, cursor doesn't change. Feels like many issues in Linux are actually GNOME/GTK/Xorg issue.

21) Your animations consume lot more CPU and GPU power than WPF. In some case 10 times more.

22) Listener of Text.textProperty() is called twice sometimes. Use the latest data.db to get into the issue. Go to Edit -> Transaction. Select 27/05/2021 in Date, You'll see 38 entries. Type mr c in Search box, out of the 12 entries last one is Sudan. Select that, click on edit button on bottom right corner, change Sudan to Kongo and click save button. You'll see [Removed the System.out.println so you won't see in console but it's called twice]:

	HiTexts: onTextChanged old Sudan -  new Kongo - 
	HiTexts: onTextChanged old Sudan -  new Kongo - 

in console. onTextChanged method of Controls/controls/texts/HiTexts.java is called twice. Select the first entry, Afghanistan. Click edit and change Afghanistan to Iraq and click save. You'll see it prints once:

	HiTexts: onTextChanged old Afghanistan -  new Iraq - 

One call is expected. Found something interesting about bind while reading your documentation. It says "... Note that JavaFX has all the bind calls implemented through weak listeners. This means the bound property can be garbage collected and stopped from being updated." Does that mean JavaFX bind is just a joke or something else?

22) When you increase font size of a TextArea with ctrl + scroll, it scales up scrollbar and some weird cursor behaviour! You see Cursor position doesn't change when font size increases

23) In TableView you've row virtualization, nothing for columns. You can drag and resize TableColumn but you can't drag TableRow, can you?

24) Qt has some good syntax highlighter, wxWidget, probably, has scintilla and WPF has RichTextBox, do you've a thing for syntax highlighting?

25) Not sure whether it's JVM or JavaFX issue. Situation is you've low memory or you've set things like these-Xms256M -Xmx512M BUT your application, at some point, needs more memory than that. In such situation JVM/JavaFX doesn't throw OutOfMemoryException or give up. It keeps using 100% of all CPU cores, probably, to collect garbage / allocate new memory BUT it can't. If you don't quit / Window manager doesn't kill it, it certainly will melt CPU. Noticed this issue in my SQLite application when I'd lot of tabs opened and each of those tab had a table with 10 columns and the underlying tableview model had ~130k rows.

26) ListView renders only the last item and you get this warning:javafx.scene.control.skin.VirtualFlow addTrailingCells INFO: index exceeds maxCellCount. Check size calculations for class CellTemplates.ListView.LedgerTemplate

Scenario: you've a ListView and a Combobox. When selection changes in Combobox, Observable list backing ListView is cleared and repopulated. This happens when you get to the last item of ListView by scrolling, leave scrollbar there and make changes in combobox's selection. Observed this issue in the Ledgers (Plot/Space/Tenant) of ReportView of my RentManager

27) ScrollTo doesn't scroll to the last item. In Regular View of RentManager's Transaction View, there's a TreeView at the bottom. When you add entries first branch is ControlHead, second Plot name and head+tenant is the leaf so you get three TreeItems when Control Head is changed. 

Keep adding a bunch of Receivable entries until you reach the bottom of the view where the vertical scrollbar will appear if ou add one more entry. At that point change the Control Head and add one entry, you'll see two branches (Control Head and Plot name) and you've to scroll down manually to see the leaf. If you add one more entry, you'll see the bottom part of the leaf is cut off.

In RentManager/trees/TransactionEntryTree.java, there's a method 'addItem' and the last line is 'scrollTo(getRow(newItem));'.

28) Method reference and removeEventHandler/Listener is a real pain. In .net you create a method 'void eventHandler(...){...}' and add with 'someEvent += eventHandler' and when no longer needed you do 'someEvent -= eventHandler' anywhere, it's that easy and elegant. Here in JavaFX you can add with:

	addEventHandler(Event, this::eventHandler)
	addListener(this::propertyChangeListener);

and can get away with that if you don't have to remove those. Real pain and unnecessary codebloat comes when you've to remove. Following doesn't work:

	removeEventHandler(Event, this::eventHandler)
	removeListener(this::propertyChangeListener);

and you don't have any stock method that returns the list of handlers/listeners which you could've cleared. To make it work you've to keep a reference of 

	EventHandler<T> handler
	ChangeListener<T> listener;
	
as class member, then you've to assign and add:

	handler = this::eventHandler;
	listener = this::propertyChangeListener
	addEventHandler(Event, handler)
	addListener(listener);
	
and to remove you've to do:
	
	if(handler != null) removeEventHandler(Event, handler)
	if(listener != null) removeListener(listener);
	
null check is a must when you're in ListCell/TreeCell and it's more painful when you've to maintain a List of these handlers.


CREDITS
---------------------------
1) Your Bindings are great with your Simps (short for Simple...Property). In WPF you've to deal with a lot of string bindings and converters.
